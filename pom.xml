<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.disco.unimib.ewshopp</groupId>
	<artifactId>key2cluster</artifactId>
	<version>1.0.1</version>
	<name>key2cluster</name>
	<description>Service that return for a keyword the semantic clusters it belongs to.</description>

	<properties>
		<java.version>1.8</java.version>
		<docker.image.name>keywordtocluster</docker.image.name>
		<docker.image.version>1.0.1</docker.image.version>
		<docker.account.name>miciav</docker.account.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.10</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.vlsi.compactmap</groupId>
			<artifactId>compactmap</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.lettuce</groupId>
					<artifactId>lettuce-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.8.0</version>
		</dependency>
			<dependency>
				<groupId>com.redislabs</groupId>
				<artifactId>jrebloom</artifactId>
				<version>1.2.0</version>
			</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>29.0-jre</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured-all</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.12.4</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>2.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<imageName>${docker.account.name}/${docker.image.name}:${docker.image.version}</imageName>
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<skipDocker>false</skipDocker>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
					<execution>
						<id>default-cli</id>
						<configuration>
							<licenseMerges>
								<licenseMerge>The Apache Software License, Version 2.0|Apache License, Version
									2.0|Apache Public License 2.0|Apache License 2.0|Apache License, version 2.0|Apache
									2|Apache 2.0
								</licenseMerge>
								<licenseMerge>The Apache Software License, Version 1.1|Apache Software License, Version
									1.1
								</licenseMerge>
								<licenseMerge>The Eclipse Public License, Version 1.0|Eclipse Public License - v
									1.0|Eclipse Public License 1.0
								</licenseMerge>
								<licenseMerge>The MIT License|MIT License</licenseMerge>
								<licenseMerge>The Lesser General Public License, Version 3.0|Lesser General Public
									License (LGPL) v 3.0|LGPL v3.0
								</licenseMerge>
							</licenseMerges>
							<sortArtifactByName>true</sortArtifactByName>
							<excludedScopes>test,runtime</excludedScopes>
							<includeOptional>false</includeOptional>
							<useMissingFile>true</useMissingFile>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>

	</build>

</project>
